// <auto-generated />
using System;
using FONEXPO2024.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FONEXPO2024.DataAccess.Migrations
{
    [DbContext(typeof(FonExpoDbContext))]
    partial class FonExpoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FONEXPO2024.Domain.Model.Entities.CenaDana", b =>
                {
                    b.Property<int>("CenaDanaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CenaDanaID"));

                    b.Property<decimal>("Cena")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("ExpoDanID")
                        .HasColumnType("int");

                    b.HasKey("CenaDanaID");

                    b.HasIndex("ExpoDanID");

                    b.ToTable("CeneDana");
                });

            modelBuilder.Entity("FONEXPO2024.Domain.Model.Entities.ExpoDan", b =>
                {
                    b.Property<int>("ExpoDanID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExpoDanID"));

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<int>("ManifestacijaID")
                        .HasColumnType("int");

                    b.Property<string>("Tema")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExpoDanID");

                    b.HasIndex("ManifestacijaID");

                    b.ToTable("ExpoDani");
                });

            modelBuilder.Entity("FONEXPO2024.Domain.Model.Entities.Izlozba", b =>
                {
                    b.Property<int>("IzlozbaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IzlozbaID"));

                    b.Property<int>("ExpoDanID")
                        .HasColumnType("int");

                    b.Property<string>("Umetnik")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("VremeOtvaranja")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("VremeZatvaranja")
                        .HasColumnType("time");

                    b.HasKey("IzlozbaID");

                    b.HasIndex("ExpoDanID");

                    b.ToTable("Izlozbe");
                });

            modelBuilder.Entity("FONEXPO2024.Domain.Model.Entities.Korisnik", b =>
                {
                    b.Property<int>("KorisnikID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KorisnikID"));

                    b.Property<string>("Adresa1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adresa2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Drzava")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("EmailPotvrdjen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mesto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostanskiBroj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Profesija")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KorisnikID");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Korisnici");
                });

            modelBuilder.Entity("FONEXPO2024.Domain.Model.Entities.Manifestacija", b =>
                {
                    b.Property<int>("ManifestacijaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ManifestacijaID"));

                    b.Property<DateTime>("DatumPocetka")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumZavrsetka")
                        .HasColumnType("datetime2");

                    b.Property<string>("DodatneInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Grad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lokacija")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxPosetilacaPoDanu")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ManifestacijaID");

                    b.ToTable("Manifestacije");
                });

            modelBuilder.Entity("FONEXPO2024.Domain.Model.Entities.Prijava", b =>
                {
                    b.Property<int>("PrijavaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PrijavaID"));

                    b.Property<int>("BrojOsoba")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatumPrijave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<decimal>("FinalPrice")
                        .HasColumnType("decimal(10,2)");

                    b.Property<bool>("IsEarlyBird")
                        .HasColumnType("bit");

                    b.Property<int>("KorisnikID")
                        .HasColumnType("int");

                    b.Property<decimal>("OriginalPrice")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int?>("PromoKodID")
                        .HasColumnType("int");

                    b.Property<string>("StatusPrijave")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Aktivna");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("PrijavaID");

                    b.HasIndex("KorisnikID");

                    b.HasIndex("PromoKodID");

                    b.HasIndex("Token")
                        .IsUnique();

                    b.ToTable("Prijave");
                });

            modelBuilder.Entity("FONEXPO2024.Domain.Model.Entities.PrijavaDan", b =>
                {
                    b.Property<int>("PrijavaID")
                        .HasColumnType("int");

                    b.Property<int>("ExpoDanID")
                        .HasColumnType("int");

                    b.HasKey("PrijavaID", "ExpoDanID");

                    b.HasIndex("ExpoDanID");

                    b.ToTable("PrijaveDana");
                });

            modelBuilder.Entity("FONEXPO2024.Domain.Model.Entities.PromoKod", b =>
                {
                    b.Property<int>("PromoKodID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PromoKodID"));

                    b.Property<int>("GenerisanOdPrijavaID")
                        .HasColumnType("int");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<int?>("IskoriscenOdPrijavaID")
                        .HasColumnType("int");

                    b.Property<string>("Kod")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("PromoKodID");

                    b.HasIndex("GenerisanOdPrijavaID");

                    b.HasIndex("IskoriscenOdPrijavaID");

                    b.HasIndex("Kod")
                        .IsUnique();

                    b.ToTable("PromoKodovi");
                });

            modelBuilder.Entity("FONEXPO2024.Domain.Model.Entities.CenaDana", b =>
                {
                    b.HasOne("FONEXPO2024.Domain.Model.Entities.ExpoDan", "ExpoDan")
                        .WithMany("CeneDana")
                        .HasForeignKey("ExpoDanID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExpoDan");
                });

            modelBuilder.Entity("FONEXPO2024.Domain.Model.Entities.ExpoDan", b =>
                {
                    b.HasOne("FONEXPO2024.Domain.Model.Entities.Manifestacija", "Manifestacija")
                        .WithMany("ExpoDani")
                        .HasForeignKey("ManifestacijaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manifestacija");
                });

            modelBuilder.Entity("FONEXPO2024.Domain.Model.Entities.Izlozba", b =>
                {
                    b.HasOne("FONEXPO2024.Domain.Model.Entities.ExpoDan", "ExpoDan")
                        .WithMany("Izlozbe")
                        .HasForeignKey("ExpoDanID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExpoDan");
                });

            modelBuilder.Entity("FONEXPO2024.Domain.Model.Entities.Prijava", b =>
                {
                    b.HasOne("FONEXPO2024.Domain.Model.Entities.Korisnik", "Korisnik")
                        .WithMany("Prijave")
                        .HasForeignKey("KorisnikID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FONEXPO2024.Domain.Model.Entities.PromoKod", "PromoKod")
                        .WithMany()
                        .HasForeignKey("PromoKodID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Korisnik");

                    b.Navigation("PromoKod");
                });

            modelBuilder.Entity("FONEXPO2024.Domain.Model.Entities.PrijavaDan", b =>
                {
                    b.HasOne("FONEXPO2024.Domain.Model.Entities.ExpoDan", "ExpoDan")
                        .WithMany("Prijave")
                        .HasForeignKey("ExpoDanID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FONEXPO2024.Domain.Model.Entities.Prijava", "Prijava")
                        .WithMany("Dani")
                        .HasForeignKey("PrijavaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExpoDan");

                    b.Navigation("Prijava");
                });

            modelBuilder.Entity("FONEXPO2024.Domain.Model.Entities.PromoKod", b =>
                {
                    b.HasOne("FONEXPO2024.Domain.Model.Entities.Prijava", "GenerisanOdPrijava")
                        .WithMany()
                        .HasForeignKey("GenerisanOdPrijavaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FONEXPO2024.Domain.Model.Entities.Prijava", "IskoriscenOdPrijava")
                        .WithMany()
                        .HasForeignKey("IskoriscenOdPrijavaID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("GenerisanOdPrijava");

                    b.Navigation("IskoriscenOdPrijava");
                });

            modelBuilder.Entity("FONEXPO2024.Domain.Model.Entities.ExpoDan", b =>
                {
                    b.Navigation("CeneDana");

                    b.Navigation("Izlozbe");

                    b.Navigation("Prijave");
                });

            modelBuilder.Entity("FONEXPO2024.Domain.Model.Entities.Korisnik", b =>
                {
                    b.Navigation("Prijave");
                });

            modelBuilder.Entity("FONEXPO2024.Domain.Model.Entities.Manifestacija", b =>
                {
                    b.Navigation("ExpoDani");
                });

            modelBuilder.Entity("FONEXPO2024.Domain.Model.Entities.Prijava", b =>
                {
                    b.Navigation("Dani");
                });
#pragma warning restore 612, 618
        }
    }
}
